<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>

  <Import Project="..\Directory.Build.targets" />

  <!-- Add the VSIX files from VS Extension projects for signing. -->
  <Target Name="AddVsixForSigning" DependsOnTargets="CreateVsixContainer" BeforeTargets="SignFiles" Condition="'$(IsVsixProject)' == 'true' AND '$(CIBuild)' == 'true'">
    <!-- Required to be in either OutDir or IntermediateOutputPath for signing. It'll be copied after signing via the CopyVsixAfterSigning target. -->
    <!-- https://devdiv.visualstudio.com/DevDiv/_wiki/wikis/DevDiv.wiki/650/MicroBuild-Signing?anchor=modify-your-project-file-to-include-%60filestosign%60-itemgroup -->
    <Copy SourceFiles="$(VisualStudioSetupInsertionPath)$(AssemblyName).vsix" DestinationFolder="$(OutDir)" />
    <ItemGroup>
      <FilesToSign Include="$(OutDir)$(AssemblyName).vsix">
        <Authenticode>VsixSHA2</Authenticode>
      </FilesToSign>
    </ItemGroup>
  </Target>

  <!-- Copies the VSIX files after they've been signed from VS Extension projects to the appropriate output folder. -->
  <Target Name="CopyVsixAfterSigning" AfterTargets="SignFiles" Condition="'$(IsVsixProject)' == 'true' AND '$(CIBuild)' == 'true'">
    <Copy SourceFiles="$(OutDir)$(AssemblyName).vsix" DestinationFolder="$(VisualStudioSetupInsertionPath)" />
  </Target>

  <!-- Sets the Experimental attribute on the VSIX manifest to 'false' for builds in CI. -->
  <Target Name="RemoveExperimentalAttributeFromVsixManifest" AfterTargets="DetokenizeVsixManifestFile" Condition="'$(CIBuild)' == 'true'">
    <PropertyGroup>
      <ObjVsixManifestPath>$(ArtifactsObjDir)$(MSBuildProjectName)\extension.vsixmanifest</ObjVsixManifestPath>
    </PropertyGroup>
    <Exec ContinueOnError="false" Command="$(PowerShellFile) &quot;$(RepoRoot)eng\scripts\RemoveExperimentalAttributeFromVsixManifest.ps1&quot; -manifestPath &quot;$(ObjVsixManifestPath)&quot;" />
  </Target>

  <!-- Specifies the version number that is used within the 'source.extension.vsixmanifest' files for VSIX packages. -->
  <Target Name="GetVsixVersion" Outputs="$(BuildVersion)" Condition="'$(IsVsixProject)' == 'true'" />

  <!--
    Generates DependentAssemblyVersions.csv that enables the Roslyn insertion tool to update various assembly versions in the VS repository under src\ProductData.
    This is used in the RoslynInsertionTool in the file RoslynInsertionTool.AssemblyVersions.cs.
    See: https://github.com/dotnet/roslyn-tools/tree/main/src/RoslynInsertionTool

    $(AssemblyVersion):                    The version number of both Microsoft.VisualStudio.Editors/Microsoft.VisualStudio.AppDesigner and Microsoft.VisualStudio.ProjectSystem.Managed/Microsoft.VisualStudio.ProjectSystem.Managed.VS.
    $(DependentAssemblyVersionsCsvPath):   The file location to create the DependentAssemblyVersions.csv file.
  -->
  <!-- TODO: This will need to be changed/removed as part of https://github.com/dotnet/project-system/issues/7911 -->
  <Target Name="CreateDependentAssemblyVersionsCsv" AfterTargets="Build" Condition="'$(CIBuild)' == 'true' AND !Exists('$(DependentAssemblyVersionsCsvPath)')">
    <Exec ContinueOnError="false" Command="$(PowerShellFile) &quot;$(RepoRoot)eng\scripts\CreateDependentAssemblyVersionsCsv.ps1&quot; -csvPath &quot;$(DependentAssemblyVersionsCsvPath)&quot; -version $(AssemblyVersion)" />
  </Target>

</Project>
